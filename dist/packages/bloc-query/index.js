"use strict";var L=Object.defineProperty;var O=(n,t,e)=>t in n?L(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var s=(n,t,e)=>(O(n,typeof t!="symbol"?t+"":t,e),e);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const l=require("@jacobtipp/bloc"),o=require("rxjs");class d{constructor(){s(this,"_");s(this,"name","QueryEvent")}}class y extends d{constructor(e,r=!1){super();s(this,"name","QueryFetchEvent");this.abortController=e,this.cancel=r}}class D extends d{constructor(){super(...arguments);s(this,"name","QueryCancelEvent")}}class x extends d{constructor(){super(...arguments);s(this,"name","SetQueryDataEvent")}}class q extends d{constructor(){super(...arguments);s(this,"name","QueryRevalidateEvent")}}class T extends d{constructor(e){super();s(this,"name","QueryErrorEvent");this.error=e}}const B=n=>new o.Observable(t=>(t.next(n),()=>{n.abortController.abort()})),S=(n,t)=>(e,r)=>e.pipe(o.switchMap(B)).pipe(o.switchMap(i=>r(i).pipe(o.retry({delay:(a,c)=>{const Q=c,g={maxRetryAttempts:1,retryDuration:1e3,scalingDuration:1e3},u=n.retryWhen?n.retryWhen(a,Q):{},A=(u==null?void 0:u.maxRetryAttempts)??n.maxRetryAttempts??g.maxRetryAttempts,M=(u==null?void 0:u.scalingDuration)??n.scalingDuration??g.scalingDuration,R=(u==null?void 0:u.retryDuration)??n.retryDuration??g.retryDuration;if(Q>A&&!t.isClosed){const w=new T(a);l.BlocObserver.observer.onEvent(t,w);const C={status:"isError",lastUpdatedAt:t.state.lastUpdatedAt,isInitial:!1,isLoading:!1,isFetching:!1,isCanceled:!1,isReady:!1,isError:!0,data:t.state.data,error:a};return t.__unsafeEmit__(C),l.BlocObserver.observer.onTransition(t,new l.Transition(t.state,w,C)),o.EMPTY}const F=(u==null?void 0:u.retryDuration)??n.retryDuration;return o.timer(F?R:Q*M)}}))));class b extends l.Bloc{constructor(e,r,i){const a=`QueryBloc - ${r.name??r.queryKey}`;super(e,{name:a});s(this,"staleTime");s(this,"logErrors");s(this,"handledInitialLoad",!1);s(this,"revertedState");s(this,"getQuery",(e,r)=>{if(this.isClosed)throw new p("Query is closed");return this.state.status==="isLoading"&&!this.handledInitialLoad&&(this.handledInitialLoad=!0,this.revertedState=this.state,this.add(new y(new AbortController))),(this.state.isReady&&this.isStale||this.state.isCanceled)&&this.revalidateQuery(),this.listen().pipe(o.startWith(this.state),o.filter(({isReady:i,isError:a})=>e?i||a:!0),o.map(i=>{if(i.isError&&e)throw i.error;return e?e(i):i}),o.distinctUntilChanged(r))});s(this,"setQueryData",e=>{let r;if(typeof e=="function"){if(this.state.data===void 0)throw new f("SetQueryData: cannot be set with a callback function if previous data is undefined, invoke setQueryData with data directly or provide initial data for the query");r=e(this.state.data)}else r=e;const i=new x;l.BlocObserver.observer.onEvent(this,i);const a=this.state,c={status:"isReady",isInitial:!1,lastUpdatedAt:Date.now(),isLoading:!1,isFetching:!1,isReady:!0,isCanceled:!1,isError:!1,data:r};this.emit(c),l.BlocObserver.observer.onTransition(this,new l.Transition(a,i,c))});s(this,"subscribers",0);s(this,"pendingCloseTimeout",null);s(this,"listen",()=>new o.Observable(e=>{this.subscribers++;const r=this.state$.subscribe(e);return()=>{var i,a;if(this.subscribers--,r.unsubscribe(),this.subscribers<=0){if(((i=this.options)==null?void 0:i.keepAlive)===1/0)return;this.pendingCloseTimeout&&clearTimeout(this.pendingCloseTimeout),this.pendingCloseTimeout=setTimeout(()=>{this.subscribers<=0&&this.closeSignal.next(this.options.queryKey)},((a=this.options)==null?void 0:a.keepAlive)??60*1e3)}}}));s(this,"cancelQuery",()=>{if(!this.state.isFetching)return;this.state.isLoading&&this.handledInitialLoad&&(this.handledInitialLoad=!1),this.add(new y(new AbortController,!0));const e=new D;l.BlocObserver.observer.onEvent(this,e);const r=this.state;this.emit({...this.revertedState,isCanceled:!0}),l.BlocObserver.observer.onTransition(this,new l.Transition(r,e,this.state))});s(this,"revalidateQuery",()=>{this.revertedState=this.state;const e=new q;l.BlocObserver.observer.onEvent(this,e);const r={status:"isFetching",lastUpdatedAt:this.state.lastUpdatedAt,isInitial:!1,isLoading:!1,isFetching:!0,isCanceled:!1,isReady:!1,isError:!1,data:this.state.data};this.emit(r),l.BlocObserver.observer.onTransition(this,new l.Transition(this.revertedState,e,r)),this.add(new y(new AbortController))});this.options=r,this.closeSignal=i,this.revertedState=e,this.staleTime=r.staleTime??0,this.logErrors=r.logErrors??!1,this.on(y,this.onQueryFetch,S({maxRetryAttempts:r.maxRetryAttempts,retryDuration:r.retryDuration,scalingDuration:r.scalingDuration,retryWhen:r.retryWhen},this))}onError(e){this.logErrors&&super.onError(e)}async onQueryFetch(e,r){if(e.cancel)return;const i=e.abortController.signal;try{const a=await this.options.queryFn({signal:i});r({status:"isReady",lastUpdatedAt:Date.now(),isInitial:!1,isLoading:!1,isFetching:!1,isReady:!0,isError:!1,isCanceled:!1,data:a})}catch(a){if(!i.aborted)throw a}}get isStale(){const e=Date.now();return this.state.lastUpdatedAt+this.staleTime<=e}}class f extends Error{constructor(e){super(e);s(this,"name","SetQueryDataException");Object.setPrototypeOf(this,f.prototype)}}class p extends Error{constructor(e){super(e);s(this,"name","QueryClosedException");Object.setPrototypeOf(this,p.prototype)}}class I{constructor(){s(this,"_isClosed",!1);s(this,"_closeSignal$",new o.Subject);s(this,"queryMap",new Map);s(this,"getQuery",t=>{if(this.isClosed)throw new h;return this.queryMap.has(t.queryKey)?this.queryMap.get(t.queryKey).getQuery(t.selector,t.comparator):this.createQuery(t).getQuery(t.selector,t.comparator)});s(this,"getQueryData",async(t,e)=>{var i;if(this.isClosed)throw new h;const r=typeof t=="string"?(i=this.queryMap.get(t))==null?void 0:i.getQuery():t;if(r)return o.firstValueFrom(r.pipe(o.filter(a=>a.isReady||a.isError||a.isCanceled),o.map(a=>{if(a.isError)throw a.error;if(a.isCanceled)throw new v;return a.data}),o.timeout({each:(e==null?void 0:e.timeout)??60*1e3,with:()=>o.throwError(()=>new m)})));throw new E(t.toString())});s(this,"clear",()=>{this.queryMap.forEach(t=>{t.close()}),this.queryMap.clear()});s(this,"removeQuery",t=>{if(this.queryMap.has(t)){const e=this.queryMap.get(t);return e==null||e.close(),this.queryMap.delete(t)}return!1});s(this,"getQueryKeys",()=>Array.from(this.queryMap.keys()));s(this,"setQueryData",(t,e)=>{const r=this.queryMap.get(t);r&&r.setQueryData(e)});s(this,"revalidateQueries",t=>{const e=t==null?void 0:t.predicate,r=t==null?void 0:t.queryKey;this.getQueryKeys().forEach(i=>{var a,c;if(!e&&!r)return(a=this.queryMap.get(i))==null?void 0:a.revalidateQuery();(r&&r===i||e&&e(i))&&((c=this.queryMap.get(i))==null||c.revalidateQuery())})});s(this,"cancelQuery",t=>{var e;(e=this.queryMap.get(t))==null||e.cancelQuery()});s(this,"close",()=>{this._isClosed=!0,this.clear(),this._closeSignal$.complete()});this._closeSignal$.subscribe({next:t=>this.removeQuery(t)})}get isClosed(){return this._isClosed}createQuery(t){if(t.initialData!==void 0){const e=new b({status:"isInitial",lastUpdatedAt:Date.now(),isInitial:!0,isFetching:!1,isLoading:!1,isReady:!0,isError:!1,isCanceled:!1,data:t.initialData},t,this._closeSignal$);return this.queryMap.set(t.queryKey,e),e}else{const e=new b({status:"isLoading",lastUpdatedAt:Date.now(),isInitial:!1,isFetching:!0,isLoading:!0,isReady:!1,isError:!1,isCanceled:!1},t,this._closeSignal$);return this.queryMap.set(t.queryKey,e),e}}}class E extends Error{constructor(e,r=`Query ${e} is not found`){super(r);s(this,"name","QueryNotFoundException");Object.setPrototypeOf(this,E.prototype)}}class v extends Error{constructor(e="The query has been canceled"){super(e);s(this,"name","QueryCanceledException");Object.setPrototypeOf(this,v.prototype)}}class m extends Error{constructor(e="QueryTimeoutException: The query has timed out"){super(e);s(this,"name","QueryTimeoutException");Object.setPrototypeOf(this,m.prototype)}}class h extends Error{constructor(e="QueryClient has already been closed"){super(e);s(this,"name","QueryClientClosedException");Object.setPrototypeOf(this,h.prototype)}}exports.QueryBloc=b;exports.QueryCancelEvent=D;exports.QueryCanceledException=v;exports.QueryClient=I;exports.QueryClientClosedException=h;exports.QueryClosedException=p;exports.QueryErrorEvent=T;exports.QueryEvent=d;exports.QueryFetchEvent=y;exports.QueryNotFoundException=E;exports.QueryRevalidateEvent=q;exports.QueryTimeoutException=m;exports.SetQueryDataEvent=x;exports.SetQueryDataException=f;exports.queryFetchTransformer=S;
